using System;
//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.18444
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------



namespace Ohana3DS.My
{

    [System.Runtime.CompilerServices.CompilerGeneratedAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0"), System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
	internal sealed partial class MySettings : global::System.Configuration.ApplicationSettingsBase
	{

		private static MySettings defaultInstance = (MySettings)global::System.Configuration.ApplicationSettingsBase.Synchronized(new MySettings());

		#region "Funcionalidade de Salvamento Automático de Minhas Configurações"

		private static bool addedHandler;

		private static object addedHandlerLockObject = new object();
		[System.Diagnostics.DebuggerNonUserCodeAttribute(), System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static void AutoSaveSettings(global::System.Object sender, global::System.EventArgs e)
		{
			if (MyProject.Application.SaveMySettingsOnExit) {
				Ohana3DS.My.MySettings.Default.Save();
			}
		}
		#endregion

		public static MySettings Default {
			get {

				if (!addedHandler) {
					lock (addedHandlerLockObject) {
						if (!addedHandler) {
							MyProject.Application.Shutdown += AutoSaveSettings;
							addedHandler = true;
						}
					}
				}
				return defaultInstance;
			}
		}

		[System.Configuration.UserScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.DefaultSettingValueAttribute("32")]
		public int ModelScale {
			get { return Convert.ToInt32(this["ModelScale"]); }
			set { this["ModelScale"] = value; }
		}

		[System.Configuration.UserScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.DefaultSettingValueAttribute("True")]
		public bool ModelMirror {
			get { return Convert.ToBoolean(this["ModelMirror"]); }
			set { this["ModelMirror"] = value; }
		}

		[System.Configuration.UserScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.DefaultSettingValueAttribute("0")]
		public int TextureFlipMirror {
			get { return Convert.ToInt32(this["TextureFlipMirror"]); }
			set { this["TextureFlipMirror"] = value; }
		}

		[System.Configuration.UserScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.DefaultSettingValueAttribute("")]
		public string ModelDefaultPath {
			get { return Convert.ToString(this["ModelDefaultPath"]); }
			set { this["ModelDefaultPath"] = value; }
		}

		[System.Configuration.UserScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.DefaultSettingValueAttribute("")]
		public string TextureDefaultPath {
			get { return Convert.ToString(this["TextureDefaultPath"]); }
			set { this["TextureDefaultPath"] = value; }
		}

		[System.Configuration.UserScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.DefaultSettingValueAttribute("False")]
		public bool FastCompression {
			get { return Convert.ToBoolean(this["FastCompression"]); }
			set { this["FastCompression"] = value; }
		}
	}
}

namespace Ohana3DS.My
{

    [Microsoft.VisualBasic.HideModuleNameAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	static internal class MySettingsProperty
	{

		[System.ComponentModel.Design.HelpKeywordAttribute("My.Settings")]
		static internal global::Ohana3DS.My.MySettings Settings {
			get { return global::Ohana3DS.My.MySettings.Default; }
		}
	}
}
